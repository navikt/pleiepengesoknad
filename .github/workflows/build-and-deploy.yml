# This workflow trigger on push to any branch
name: CI / CD
on:
    push:
        paths-ignore:
            - '**.md'
            - '.gitignore'
            - 'LICENCE'
            - 'CODEOWNERS'
        branches:

env:
    IMAGE: docker.pkg.github.com/${{ github.repository }}/pleiepengesoknad:${{ github.sha }}
    IMAGE-GCP: docker.pkg.github.com/${{ github.repository }}/pleiepengesoknad-gpc:${{ github.sha }}
    GITHUB_USERNAME: x-access-token
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    test:
        name: Test Code with Jest
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.16.1] # => lts/erbium

        steps:
            - uses: actions/checkout@v1
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Test code
              run: |
                  CYPRESS_INSTALL_BINARY=0 npm ci
                  npm run test
    e2e:
        name: End to End testing with Cypress
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.16.1] # => lts/erbium
        steps:
            - uses: actions/checkout@v1
            - name: Setup kernel for react + node, increase watchers
              run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
            - name: Run E2E with
              run: npm run e2e-docker-compose

    build-sbs-code-and-push-docker:
        name: Build code and push docker image
        if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/master') || github.event.deployment.payload.triggered # Build and push docker if branch is either master or dev-*
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Cache NPM dependencies
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-npm-cache-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: build code
              run: |
                  npm i
                  npm run build
            - name: Build and publish Docker image
              run: |
                  docker build --tag ${IMAGE} .
                  docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
                  docker push ${IMAGE}

    deploy-dev-sbs:
        name: deploy-dev-sbs
        if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/master')
        needs: build-sbs-code-and-push-docker
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-sbs
                  RESOURCE: nais/dev-sbs.yml

    deploy-prod-sbs:
        name: deploy-prod-sbs
        if: startsWith(github.ref, 'refs/heads/master')
        needs: build-sbs-code-and-push-docker
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-sbs
                  RESOURCE: nais/prod-sbs.yml

    build-gcp-code-and-push-docker:
        name: Build gcp code and push docker image
        if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/master') || github.event.deployment.payload.triggered # Build and push docker if branch is either master or dev-*
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Cache NPM dependencies
              uses: actions/cache@v1
              with:
                  path: node_modules
                  key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.OS }}-npm-cache-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: build gcp code
              run: |
                  npm i
                  npm run build-gcp
            - name: Build and publish Docker image
              run: |
                  docker build --tag ${IMAGE-GCP} .
                  docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
                  docker push ${IMAGE-GCP}

    deploy-dev-gcp:
        name: Deploy to dev-gcp
        if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/master')
        needs: build-gcp-code-and-push-docker
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-gcp
                  RESOURCE: nais/naiserator.yml
                  VARS: nais/dev-gcp.json

    deploy-prod-gcp:
        name: Deploy-prod-gcp
        if: startsWith(github.ref, 'refs/heads/master')
        needs: build-gcp-code-and-push-docker
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v1
            - uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-gcp
                  RESOURCE: nais/naiserator.yml
                  VARS: nais/prod-gcp.json
